global:
  sso:
    enabled: false

  common:
    labels: {}

# Required for production environments
license:
# If set to true we'll provision an admin user and allow admin api access
enableAdminApi: false
# If using S3 be sure the pod has valid IAM creds, if using minio
# you can include the creds in the bucket url, i.e.
# !!! Be sure to use the externally accessible host / ingress,
# not the internal service
# s3://$ACCESS_KEY_ID:$SECRET_KEY@$HOST/$BUCKET?tls=true
bucket:
bucketRegion: us-east-1
# If you use a custom KMS key for bucket encryption specify the arn here
bucketKmsKeyArn:
# We use sendgrid.com by default to send emails, but you can specify your own smtp server
smtpServer:
# when setting up an ingress, set this to http://domain.com or https://domain.com
host:
# If you aren't connected to an external bucket and want to mount a custom claim for minio
existingClaim:

# set additional env variables
extraEnv:
# - name: AWS_SECRET_ACCESS_KEY
#   value: XXX

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

# dns hostAliases, generally only used in development
hostAliases: []
# Custom CA's to make SSL verification work for self signed certs
# You'll likely want to use `--set-file customCACerts={/path/to/rootCA.crt}`
customCACerts: []

serviceAccount:
  create: true
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext:
  fsGroup: 0
  fsGroupChangePolicy: "OnRootMismatch"

securityContext:
  runAsNonRoot: true
  runAsUser: 999
  runAsGroup: 0

service:
  type: ClusterIP
  port: 8080

sso:
  enabled: false
  # Automatically provision a user if SSO auth succeeds
  autoProvision: true
  issuer:
  # Can be implicit or pkce
  method: implicit
  clientId:
  # Optional, only if your IDP requires it
  clientSecret:

ingress:
  enabled: false
  className: ""
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: wandb.mycompany.net
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  requests:
    cpu: 1000m
    memory: 2Gi

nodeSelector: {}

tolerations: []

affinity: {}

## Installation & configuration of stable/redis
## See Chart.yaml for current version
redis:
  install: true
  auth:
    password: "wandb-redis-password"
  architecture: standalone
  cluster:
    enabled: false
  metrics:
    enabled: true

## Installation & configuration of stable/mysql
## See Chart.yaml for current version
mysql:
  install: true
